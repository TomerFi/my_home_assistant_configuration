# yamllint disable rule:line-length

ring_the_doorbell:
  sequence:
    - service: mqtt.publish
      data:
        topic: "omg/rfgw_hallway/commands/PLSL_450/433_1/RFBITS_24"
        payload: "14878223"

correct_objects_values:
  sequence:
    - service: mqtt.publish
      data:
        topic: "smarthome/mqtt_client/status_update"
        payload: "Offline"
    - service: input_text.set_value
      data_template:
        entity_id: input_text.shabbat_notify_minutes_start
        value: "{%if states.input_text.shabbat_notify_minutes_start.state != 'unknown' %}{{ states.input_text.shabbat_notify_minutes_start.state }}{%else%}15{%endif%}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.nursery_ambiance_color_temperature
        value: "{% if states.light.nursery_main_light.attributes.color_temp %}{{ states.light.nursery_main_light.attributes.color_temp }}{%else%}153{%endif%}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.nursery_lightstrip_brightness
        value: "{% if states.light.nursery_dresser_light.attributes.brightness %}{{ states.light.nursery_dresser_light.attributes.brightness }}{%else%}0{%endif%}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.nursery_bloom_brightness
        value: "{% if states.light.nursery_chair_light.attributes.brightness %}{{ states.light.nursery_chair_light.attributes.brightness }}{%else%}0{%endif%}"
    - service: script.turn_on
      data:
        entity_id: script.sync_nursery_ac_entities
    - service: script.turn_on
      data:
        entity_id: script.sync_bedroom_ac_entities
    - service: script.turn_on
      data:
        entity_id: script.sync_living_room_ac_entities

run_speed_test:
  sequence:
    - service: speedtestdotnet.speedtest

tv_led_theme_select_script:
  sequence:
    - service: scene.turn_on
      data_template:
        entity_id: >
          {% if (selected_theme == "Blissful") %} scene.blissful_lights
          {% elif (selected_theme == "Cheerful") %} scene.cheerful_lights
          {% elif (selected_theme == "Dream") %} scene.dream_lights
          {% elif (selected_theme == "Energizing") %} scene.energizing_lights
          {% elif (selected_theme == "Epic") %} scene.epic_lights
          {% elif (selected_theme == "Exciting") %} scene.exciting_lights
          {% elif (selected_theme == "Focusing") %} scene.focusing_lights
          {% elif (selected_theme == "Halloween") %} scene.halloween_lights
          {% elif (selected_theme == "Hanukkah") %} scene.hanukkah_lights
          {% elif (selected_theme == "Holy") %} scene.holy_lights
          {% elif (selected_theme == "Independence Day") %} scene.independence_day_lights
          {% elif (selected_theme == "Intense") %} scene.intense_lights
          {% elif (selected_theme == "Mellow") %} scene.mellow_lights
          {% elif (selected_theme == "Peaceful") %} scene.peaceful_lights
          {% elif (selected_theme == "Powerful") %} scene.powerful_lights
          {% elif (selected_theme == "Relaxing") %} scene.relaxing_lights
          {% elif (selected_theme == "Santa") %} scene.santa_lights
          {% elif (selected_theme == "Serene") %} scene.serene_lights
          {% elif (selected_theme == "Soothing") %} scene.soothing_lights
          {% elif (selected_theme == "Sports") %} scene.sports_lights
          {% elif (selected_theme == "Tranquil") %} scene.tranquil_lights
          {% elif (selected_theme == "Warming") %} scene.warming_lights
          {% endif %}

set_nursery_ceiling_fan_low:
  sequence:
    - service: fan.set_speed
      data:
        entity_id: "fan.nursery_ceiling_fan"
        speed: "low"

set_nursery_ceiling_fan_medium:
  sequence:
    - service: fan.set_speed
      data:
        entity_id: "fan.nursery_ceiling_fan"
        speed: "medium"

set_nursery_ceiling_fan_high:
  sequence:
    - service: fan.set_speed
      data:
        entity_id: "fan.nursery_ceiling_fan"
        speed: "high"

set_nursery_ceiling_fan_off:
  sequence:
    - service: fan.turn_off
      data:
        entity_id: "fan.nursery_ceiling_fan"

set_office_ceiling_fan_low:
  sequence:
    - service: fan.set_speed
      data:
        entity_id: "fan.office_ceiling_fan"
        speed: "low"

set_office_ceiling_fan_medium:
  sequence:
    - service: fan.set_speed
      data:
        entity_id: "fan.office_ceiling_fan"
        speed: "medium"

set_office_ceiling_fan_high:
  sequence:
    - service: fan.set_speed
      data:
        entity_id: "fan.office_ceiling_fan"
        speed: "high"

set_office_ceiling_fan_off:
  sequence:
    - service: fan.turn_off
      data:
        entity_id: "fan.office_ceiling_fan"

check_last_recorder_session:
  sequence:
    - service: notify.telegram_tomer_service
      data:
        message: "Last ended session end status was {{ states.sensor.last_recorder_status.state }}"
        title: "Recorder"

sync_nursery_ac_entities:
  sequence:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.nursery_ac_temperature_select
        value: "{%if states.input_number.nursery_ac_temperature_select.state != 'unknown' %}{{ states.input_number.nursery_ac_temperature_select.state }}{%else%}30{%endif%}"
    - service: mqtt.publish
      data_template:
        topic: "tomerfi_custom_ac/nursery/current_temperature"
        payload_template: "{{ states.sensor.nursery_broadlink_a1_temperature.state | round(1) }}"
    - service: climate.set_fan_mode
      data_template:
        entity_id: climate.nursery_air_conditioner
        fan_mode: "{{ states.input_select.nursery_ac_fan_level.state }}"
    - service: climate.set_temperature
      data_template:
        entity_id: climate.nursery_air_conditioner
        temperature: "{{ states.input_number.nursery_ac_temperature_select.state }}"
    - condition: template
      value_template: "{{ states.input_select.nursery_ac_operation_mode.state != 'off' }}"
    - service: climate.set_operation_mode
      data_template:
        entity_id: climate.nursery_air_conditioner
        operation_mode: "{{ states.input_select.nursery_ac_operation_mode.state }}"

sync_living_room_ac_entities:
  sequence:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.living_room_ac_temperature_select
        value: "{%if states.input_number.living_room_ac_temperature_select.state != 'unknown' %}{{ states.input_number.living_room_ac_temperature_select.state }}{%else%}30{%endif%}"
    - service: mqtt.publish
      data_template:
        topic: "tomerfi_custom_ac/living_room/current_temperature"
        payload_template: "{{ states.sensor.living_room_temperature.state | round(1) }}"
    - service: climate.set_fan_mode
      data_template:
        entity_id: climate.living_room_air_conditioner
        fan_mode: "{{ states.input_select.living_room_ac_fan_level.state }}"
    - service: climate.set_temperature
      data_template:
        entity_id: climate.living_room_air_conditioner
        temperature: "{{ states.input_number.living_room_ac_temperature_select.state }}"
    - condition: template
      value_template: "{{ states.input_select.living_room_ac_operation_mode.state != 'off' }}"
    - service: climate.set_operation_mode
      data_template:
        entity_id: climate.living_room_air_conditioner
        operation_mode: "{{ states.input_select.living_room_ac_operation_mode.state }}"

sync_bedroom_ac_entities:
  sequence:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.bedroom_ac_temperature_select
        value: "{%if states.input_number.bedroom_ac_temperature_select.state != 'unknown' %}{{ states.input_number.bedroom_ac_temperature_select.state }}{%else%}30{%endif%}"
    - service: mqtt.publish
      data_template:
        topic: "tomerfi_custom_ac/bedroom/current_temperature"
        payload_template: "{{ states.sensor.bedroom_temperature.state | round(1) }}"
    - service: climate.set_fan_mode
      data_template:
        entity_id: climate.bedroom_air_conditioner
        fan_mode: "{{ states.input_select.bedroom_ac_fan_level.state }}"
    - service: climate.set_temperature
      data_template:
        entity_id: climate.bedroom_air_conditioner
        temperature: "{{ states.input_number.bedroom_ac_temperature_select.state }}"
    - condition: template
      value_template: "{{ states.input_select.bedroom_ac_operation_mode.state != 'off' }}"
    - service: climate.set_operation_mode
      data_template:
        entity_id: climate.bedroom_air_conditioner
        operation_mode: "{{ states.input_select.bedroom_ac_operation_mode.state }}"
