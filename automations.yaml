##########################################
########## System Automations ############
##########################################
- id: on_start_event
  alias: on_start_event
  trigger:
    - platform: homeassistant
      event: start
  action:
    - delay: '00:00:30'
    - service: script.turn_on
      entity_id: script.correct_objects_values
    - service: script.turn_on
      entity_id: script.run_speed_test
    - service: script.turn_on
      entity_id: script.get_workstation_mqtt_client_status
    - service: script.turn_on
      entity_id: script.check_last_recorder_session

- id: set_log_level
  alias: set_log_level
  trigger:
    platform: state
    entity_id: input_select.select_log_level
  action:
    service: logger.set_level
    data_template:
      homeassistant.components: "{{ trigger.to_state.state }}"

##########################################
#### Office Ceiling Fan Automations ######
##########################################
- id: office_fan_level_change_on
  alias: office_fan_level_change_on
  trigger:
    platform: state
    entity_id: input_select.office_ceiling_fan_level
    from: "OFF_"
  action:
    - service: switch.turn_on
      data:
        entity_id: switch.office_light
    - service: switch.turn_on
      data_template:
        entity_id: >
          {%if trigger.to_state.state == "LOW"%}switch.office_fan_low_speed
          {%elif trigger.to_state.state == "MED"%}switch.office_fan_medium_speed
          {%elif trigger.to_state.state == "HIGH"%}switch.office_fan_high_speed
          {%else%}switch.office_fan
          {%endif%}

- id: office_fan_level_change_off
  alias: office_fan_level_change_off
  trigger:
    platform: state
    entity_id: input_select.office_ceiling_fan_level
    to: "OFF_"
  action:
    service: switch.turn_off
    data:
      entity_id: switch.office_fan

- id: office_light_off
  alias: office_light_off
  trigger:
    platform: state
    entity_id: switch.office_light
    to: 'off'
  action:
    - service: python_script.set_entity_state
      data:
        state: 'OFF_'
        entity_id: input_select.office_ceiling_fan_level
    - service: python_script.set_entity_state
      data:
        state: 'off'
        entity_id:
        - switch.office_fan_light
        - switch.office_fan_low_speed
        - switch.office_fan_medium_speed
        - switch.office_fan_high_speed
        - switch.office_fan

- id: office_light_on
  alias: office_light_on
  trigger:
    platform: state
    entity_id: switch.office_light
    to: 'on'
  action:
    service: python_script.set_entity_state
    data:
      state: 'on'
      entity_id: switch.office_fan_light

- id: office_fan_off
  alias: office_fan_off
  trigger:
    - platform: state
      entity_id: switch.office_fan_low_speed
      to: 'off'
    - platform: state
      entity_id: switch.office_fan_medium_speed
      to: 'off'
    - platform: state
      entity_id: switch.office_fan_high_speed
      to: 'off'
    - platform: state
      entity_id: switch.office_fan
      to: 'off'
  action:
    - service: python_script.set_entity_state
      data:
        state: 'off'
        entity_id:
          - switch.office_fan_low_speed
          - switch.office_fan_medium_speed
          - switch.office_fan_high_speed
          - switch.office_fan
    - service: python_script.set_entity_state
      data:
        state: 'OFF_'
        entity_id: input_select.office_ceiling_fan_level

- id: office_fan_on
  alias: office_fan_on
  trigger:
    - platform: state
      entity_id: switch.office_fan_low_speed
      to: 'on'
    - platform: state
      entity_id: switch.office_fan_medium_speed
      to: 'on'
    - platform: state
      entity_id: switch.office_fan_high_speed
      to: 'on'
    - platform: state
      entity_id: switch.office_fan
      to: 'on'
  action:
    - service: switch.turn_on
      data:
        entity_id: switch.office_light
    - service: input_select.select_option
      data_template:
        entity_id: input_select.office_ceiling_fan_level
        option: >
          {%if trigger.entity_id == "switch.office_fan_low_speed" %}LOW
          {%elif trigger.entity_id == "switch.office_fan_medium_speed" %}MED
          {%elif trigger.entity_id == "switch.office_fan_high_speed" %}HIGH
          {%else%}OFF_
          {%endif%}

- id: office_fan_light_on
  alias: office_fan_light_on
  trigger:
    platform: state
    entity_id: switch.office_fan_light
    to: 'on'
  action:
    service: switch.turn_on
    data:
      entity_id: switch.office_light

###########################################
######### Tracking Automations ############
###########################################
- id: update_hava_last_state
  alias: update_hava_last_state
  trigger:
    - platform: state
      entity_id: device_tracker.havaphone_hpowntracks
  action:
    service: input_text.set_value
    data_template:
      entity_id: input_text.hava_last_state
      value: >
        {% if trigger.to_state.state == 'not_home' %}
          {{ states.sensor.hava_owntracks_gecode.state }}
        {%else%}{{ trigger.to_state.state | title }}
        {%endif%}

- id: update_tomer_last_state
  alias: update_tomer_last_state
  trigger:
    - platform: state
      entity_id: device_tracker.tomerphone_tpowntracks
  action:
    service: input_text.set_value
    data_template:
      entity_id: input_text.tomer_last_state
      value: >
        {% if trigger.to_state.state == 'not_home' %}
          {{ states.sensor.tomer_owntracks_gecode.state }}
        {%else%}{{ trigger.to_state.state | title }}
        {%endif%}

- id: home_workstation_update_mqtt_client_status
  alias: home_workstation_update_mqtt_client_status
  trigger:
    platform: state
    entity_id: sensor.home_workstation_nmap_tracker
    to: "Offline"
    for:
      minutes: 5
  action:
    - service: mqtt.publish
      data:
        topic: "smarthome/mqtt_client/status_update"
        payload: "Offline"
    - delay: '00:01:00'
    - service: script.turn_on
      entity_id: script.get_workstation_mqtt_client_status

- id: update_tracker_devices
  alias: update_tracker_devices
  trigger:
    - platform: time
      minutes: '/20'
      seconds: 00
  action:
    service: script.turn_on
    entity_id: script.update_all_devices
